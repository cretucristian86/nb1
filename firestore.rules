/**
 * @description This ruleset enforces a user-ownership model for user profiles and allows users to create enrollment documents associated with their user ID.
 * @dataStructure
 *   - /users/{userId}: Stores user profile data, accessible only to the owning user.
 *   - /enrollments/{enrollmentId}: Stores enrollment data, with a userId field linking it to a specific user.
 * @keySecurityDecisions
 *   - User listing is disabled to protect user privacy.
 *   - Enrollment creation is allowed if the userId field matches the authenticated user's ID.
 *   - Enrollments can be read, updated, and deleted only by the user who created them.
 * @denormalizationForAuthorization
 *   - Enrollment documents include a `userId` field to directly associate them with a user, enabling efficient ownership checks without additional `get()` calls.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows users to read and write their own user profile data.
     * @path /users/{userId}
     * @allow (get, update, delete) if request.auth.uid == userId
     * @allow (create) if request.auth.uid == userId
     * @deny (get, update, delete) if request.auth.uid != userId
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Allows users to create enrollment documents associated with their user ID.
     * @path /enrollments/{enrollmentId}
     * @allow (create) if request.auth.uid == request.resource.data.userId
     * @allow (get, list) if true
     * @allow (update, delete) if isOwner(resource.data.userId)
     * @deny (create) if request.auth.uid != request.resource.data.userId
     * @principle Enforces that the userId field in the enrollment matches the authenticated user's ID.
     */
    match /enrollments/{enrollmentId} {
      allow get, list: if true;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isExistingOwner(resource.data.userId);
      allow delete: if isExistingOwner(resource.data.userId);
    }

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
    }
  }
}